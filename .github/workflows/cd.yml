name: CD

on:
    #workflow_dispatch:
    workflow_run:
      workflows: ["CI"]
      types:
        - completed
jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:  
      - name: Download artifact image tag
        uses: actions/download-artifact@v4
        with:
          name: image-tag
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.ACCESS_TOKEN }} 

      - name: Test artifact download
        run: ls -R
      
      - name: Read tag from artifact
        id: read_tag
        run: |
          IMAGE_TAG=$(cat image-tag.txt)        
          echo "tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Extract repository name
        id: repo-name
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "name=$repo-name" >> $GITHUB_OUTPUT 

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PEM_KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/ubuntu/docker"

      - name: Deploy to EC2 using SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PEM_KEY }}
          port: 22
          script: |
            set -e
            cd /home/ubuntu/docker
            if ! command -v docker &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo usermod -aG docker ${{ secrets.EC2_USER }}
            fi
             # Docker login
            echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Define image variables
            # REPO_NAME is set in GITHUB_ENV by 'Extract repository name' step
            # tag is set as an output by 'Read tag from artifact' step
            DKR_REPOSITORY_VAR="${{ secrets.DOCKER_USERNAME }}/${{ env.REPO_NAME }}"
            IMAGE_TAG_VAR="${{ steps.read_tag.outputs.tag }}"

            echo "Pulling image: $DKR_REPOSITORY_VAR:$IMAGE_TAG_VAR"
            sudo docker pull "$DKR_REPOSITORY_VAR:$IMAGE_TAG_VAR"
            
            echo "Running docker-compose up"
            # Export variables for docker-compose
            export DKR_REPOSITORY="$DKR_REPOSITORY_VAR"
            export IMAGE_TAG="$IMAGE_TAG_VAR"
            sudo docker-compose up -d --force-recreate
        


  
                     


