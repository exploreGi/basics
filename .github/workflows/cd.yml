name: CD

on:
    #workflow_dispatch:
    workflow_run:
      workflows: ["CI"]
      types:
        - completed
jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:  
      - name: Download artifact image tag
        uses: actions/download-artifact@v4
        with:
          name: image-tag
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.ACCESS_TOKEN }} 
          #repository: 

      - name: Test artifact download
        run: ls -R
      
      - name: Read tag from artifact
        id: read_tag
        run: |
          IMAGE-TAG=$(cat image-tag.txt)        
          echo "tag=$IMAGE-TAG" >> $GITHUB_OUTPUT

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Extract repository name
        id: repo-name
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "name=$repo-name" >> $GITHUB_OUTPUT 

      - name: Connect to EC2
        env:
          EC2_PEM_KEY: ${{ secrets.EC2_PEM_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          DKR_REGISTRY: ${{ secrets.DOCKER_USERNAME }}
          DKR_REPOSITORY: ${{ secrets.DOCKER_USERNAME }}/${{ env.REPO_NAME }}
          IMAGE-TAG: ${{ steps.read_tag.outputs.tag }}
     
        run: |
          # Save PEM key to file and set permissions
          echo "$EC2_PEM_KEY" > ec2.pem
          chmod 400 ec2.pem
          SSH_COMMAND="ssh -i ec2.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST"
          SCP_COMMAND="scp -i ec2.pem -o StrictHostKeyChecking=no"
          $SSH_COMMAND "mkdir -p /home/ubuntu/docker"
          # Copy docker-compose.yml to EC2 server
          $SCP_COMMAND docker-compose.yml "$EC2_USER@$EC2_HOST:/home/ubuntu/docker/"
          # SSH into EC2 and install Docker + deploy the container
          $SSH_COMMAND << 'EOF'
          set -e
          # Install Docker if not installed
          if ! command -v docker &> /dev/null; then
            sudo sh installDocker.sh
            sudo usermod -aG docker $EC2_USER   
            sudo newgrp docker  
          fi
          # Docker login using credentials passed via environment
          echo "${{secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          export DKR_REGISTRY=${{ secrets.DOCKER_USERNAME }}
          export DKR_REPOSITORY=$DKR_REGISTRY/${{ env.REPO_NAME }}
          export IMAGE-TAG=${{ steps.read_tag.outputs.tag }}

          
          cd /home/ubuntu/docker
          sudo docker pull $DKR_REPOSITORY:IMAGE-TAG
          sudo docker compose up -d --force-recreate
          EOF
  
          # Cleanup the PEM file
          rm -f ec2.pem
        
            


